{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\OneDrive\\\\Desktop\\\\IFN636_Assignment2\\\\Frontend\\\\src\\\\components\\\\TeamLeadDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeamLeadDashboard({\n  user\n}) {\n  _s();\n  const [teamLeaves, setTeamLeaves] = useState([]); // pending leaves for team lead to approve\n\n  useEffect(() => {\n    // Fetch all leave requests (or filter to team if that was implemented)\n    const token = localStorage.getItem('token');\n    fetch(`${process.env.REACT_APP_API_BASE_URL || ''}/api/leaves`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      // Filter only pending leaves (team lead can approve pending ones)\n      const pending = data.filter(lv => lv.status === \"PENDING\");\n      setTeamLeaves(pending);\n    }).catch(err => console.error(\"Error fetching team leaves\", err));\n  }, []);\n  const approveLeave = leaveId => {\n    const token = localStorage.getItem('token');\n    fetch(`${process.env.REACT_APP_API_BASE_URL || ''}/api/leaves/${leaveId}/approve-teamlead`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      // Remove from list after approval\n      setTeamLeaves(prev => prev.filter(lv => lv._id !== leaveId));\n    }).catch(err => console.error(\"Error approving leave\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Team Lead Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Leave Requests (Team)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: teamLeaves.map(lv => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [lv.user.name, \": \", lv.startDate.substring(0, 10), \" to \", lv.endDate.substring(0, 10), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => approveLeave(lv._id),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, lv._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamLeadDashboard, \"4X+yqWBn75PlJRdCxvFwKKNx7z8=\");\n_c = TeamLeadDashboard;\nexport default TeamLeadDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeamLeadDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TeamLeadDashboard","user","_s","teamLeaves","setTeamLeaves","token","localStorage","getItem","fetch","process","env","REACT_APP_API_BASE_URL","headers","then","res","json","data","pending","filter","lv","status","catch","err","console","error","approveLeave","leaveId","method","prev","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","startDate","substring","endDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adith/OneDrive/Desktop/IFN636_Assignment2/Frontend/src/components/TeamLeadDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction TeamLeadDashboard({ user }) {\r\n  const [teamLeaves, setTeamLeaves] = useState([]);  // pending leaves for team lead to approve\r\n\r\n  useEffect(() => {\r\n    // Fetch all leave requests (or filter to team if that was implemented)\r\n    const token = localStorage.getItem('token');\r\n    fetch(`${process.env.REACT_APP_API_BASE_URL || ''}/api/leaves`, {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Filter only pending leaves (team lead can approve pending ones)\r\n        const pending = data.filter(lv => lv.status === \"PENDING\");\r\n        setTeamLeaves(pending);\r\n      })\r\n      .catch(err => console.error(\"Error fetching team leaves\", err));\r\n  }, []);\r\n\r\n  const approveLeave = (leaveId) => {\r\n    const token = localStorage.getItem('token');\r\n    fetch(`${process.env.REACT_APP_API_BASE_URL || ''}/api/leaves/${leaveId}/approve-teamlead`, {\r\n      method: 'PATCH',\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Remove from list after approval\r\n        setTeamLeaves(prev => prev.filter(lv => lv._id !== leaveId));\r\n      })\r\n      .catch(err => console.error(\"Error approving leave\", err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Team Lead Panel</h2>\r\n      <h3>Pending Leave Requests (Team)</h3>\r\n      <ul>\r\n        {teamLeaves.map(lv => (\r\n          <li key={lv._id}>\r\n            {lv.user.name}: {lv.startDate.substring(0,10)} to {lv.endDate.substring(0,10)} \r\n            <button onClick={() => approveLeave(lv._id)}>Approve</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* Team leads might also view team members' shifts or assist in swaps if needed */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamLeadDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}