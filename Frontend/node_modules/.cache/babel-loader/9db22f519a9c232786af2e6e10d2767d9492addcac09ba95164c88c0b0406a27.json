{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\OneDrive\\\\Desktop\\\\IFN636_Assignment2\\\\Frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\nasync function api(path, {\n  method = \"GET\",\n  body,\n  token\n} = {}) {\n  const res = await fetch(`${API_URL}${path}`, {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token ? {\n        Authorization: `Bearer ${token}`\n      } : {})\n    },\n    ...(body ? {\n      body: JSON.stringify(body)\n    } : {})\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw new Error(data.message || res.statusText);\n  return data;\n}\nexport default function Dashboard() {\n  _s();\n  // ---- auth token (adjust if you store it differently) ----\n  const [token] = useState(() => localStorage.getItem(\"token\") || \"\");\n\n  // ---- data for the page ----\n  const [myShifts, setMyShifts] = useState([]); // shifts that belong to the logged-in user\n  const [users, setUsers] = useState([]); // all users you can swap with\n  const [loading, setLoading] = useState(true);\n  const [loadMsg, setLoadMsg] = useState(\"\");\n\n  // ---- request swap state ----\n  const [yourShiftId, setYourShiftId] = useState(\"\");\n  const [targetUserId, setTargetUserId] = useState(\"\");\n  const [targetDate, setTargetDate] = useState(\"\"); // yyyy-mm-dd\n  const [targetShiftId, setTargetShiftId] = useState(\"\");\n  const [findingTarget, setFindingTarget] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n\n  // ---------- load initial data ----------\n  useEffect(() => {\n    let cancelled = false;\n    async function load() {\n      try {\n        setLoading(true);\n        setLoadMsg(\"\");\n        // get my shifts\n        const mine = await api(`/shifts?mine=1`, {\n          token\n        });\n        // get users (if you have /users protected by Manager only, expose a list endpoint for everyone or return teammates)\n        let people = [];\n        try {\n          people = await api(`/users`, {\n            token\n          });\n        } catch {\n          // fallback to a team endpoint if you have one\n          // people = await api(`/teams/members`, { token });\n        }\n        if (!cancelled) {\n          var _mine$;\n          setMyShifts(Array.isArray(mine) ? mine : []);\n          setUsers(Array.isArray(people) ? people : []);\n          if (mine !== null && mine !== void 0 && (_mine$ = mine[0]) !== null && _mine$ !== void 0 && _mine$._id) setYourShiftId(mine[0]._id);\n        }\n      } catch (e) {\n        if (!cancelled) setLoadMsg(e.message);\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    }\n    load();\n    return () => {\n      cancelled = true;\n    };\n  }, [token]);\n\n  // ---------- resolve targetShiftId whenever user+date change ----------\n  useEffect(() => {\n    let cancelled = false;\n    async function resolveTarget() {\n      setMsg(\"\");\n      setTargetShiftId(\"\");\n      if (!targetUserId || !targetDate) return;\n      try {\n        setFindingTarget(true);\n        // Backend must support filtering by userId+date (see section B below)\n        const list = await api(`/shifts?userId=${encodeURIComponent(targetUserId)}&date=${encodeURIComponent(targetDate)}`, {\n          token\n        });\n        if (!cancelled) {\n          const found = Array.isArray(list) && list.length ? list[0] : null;\n          setTargetShiftId(found ? found._id : \"\");\n          if (!found) setMsg(\"Selected user has no shift on that date.\");\n        }\n      } catch (e) {\n        if (!cancelled) setMsg(e.message);\n      } finally {\n        if (!cancelled) setFindingTarget(false);\n      }\n    }\n    resolveTarget();\n    return () => {\n      cancelled = true;\n    };\n  }, [targetUserId, targetDate, token]);\n\n  // ---------- submit swap ----------\n  async function handleSwapSubmit(e) {\n    e.preventDefault();\n    setMsg(\"\");\n    if (!yourShiftId || !targetUserId || !targetDate) {\n      setMsg(\"Please select: My shift, User to swap with, and Target date.\");\n      return;\n    }\n    if (!targetShiftId) {\n      setMsg(\"Selected user has no shift on the chosen date.\");\n      return;\n    }\n    try {\n      const payload = {\n        yourShiftId,\n        targetUserId,\n        targetShiftId,\n        // ✅ send the ID (not just the date)\n        targetDate // optional; backend can double-check if you implement it\n      };\n      const res = await api(`/shifts/swap`, {\n        method: \"POST\",\n        body: payload,\n        token\n      });\n      setMsg(res.message || \"Swap request created.\");\n      // optionally refresh lists:\n      // const mine = await api(`/shifts?mine=1`, { token }); setMyShifts(mine);\n    } catch (e) {\n      setMsg(e.message || \"Failed to create swap request.\");\n    }\n  }\n  const myShiftOptions = useMemo(() => myShifts.map(s => {\n    var _s$user;\n    return {\n      id: s._id,\n      label: `${new Date(s.date).toLocaleDateString()} — ${((_s$user = s.user) === null || _s$user === void 0 ? void 0 : _s$user.name) || \"Me\"}`\n    };\n  }), [myShifts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-3\",\n        children: \"My Shifts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : loadMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-600\",\n        children: loadMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: myShifts.map(s => {\n          var _s$user2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"border rounded p-2\",\n            children: [new Date(s.date).toLocaleDateString(), \" \\u2014 \", ((_s$user2 = s.user) === null || _s$user2 === void 0 ? void 0 : _s$user2.name) || \"Me\"]\n          }, s._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-8 border rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Request Swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSwapSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-medium\",\n            children: \"My shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"border rounded p-2\",\n            value: yourShiftId,\n            onChange: e => setYourShiftId(e.target.value),\n            children: myShiftOptions.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o.id,\n              children: o.label\n            }, o.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-gray-500\",\n            children: \"Choose the shift you want to swap away.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-medium\",\n            children: \"User to swap with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"border rounded p-2\",\n            value: targetUserId,\n            onChange: e => setTargetUserId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a user\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), users.filter(u => !!(u !== null && u !== void 0 && u._id)).map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u._id,\n              children: u.name\n            }, u._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-gray-500\",\n            children: \"Pick the person you want to swap with.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-medium\",\n            children: \"Target date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border rounded p-2\",\n            type: \"date\",\n            value: targetDate,\n            onChange: e => setTargetDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-gray-500\",\n            children: \"We\\u2019ll look up that user\\u2019s shift on the selected date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), findingTarget && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-blue-600\",\n            children: \"Checking target shift\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 31\n          }, this), targetShiftId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-green-700\",\n            children: [\"Target shift found (id: \", targetShiftId, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-700 text-white px-4 py-2 rounded hover:bg-blue-800\",\n          children: \"Request Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mt-2 text-red-600\",\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"C0rIk5ffEO/D3bRxgnLrRCO3T+k=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","api","path","method","body","token","res","fetch","headers","Authorization","JSON","stringify","data","json","catch","ok","Error","message","statusText","Dashboard","_s","localStorage","getItem","myShifts","setMyShifts","users","setUsers","loading","setLoading","loadMsg","setLoadMsg","yourShiftId","setYourShiftId","targetUserId","setTargetUserId","targetDate","setTargetDate","targetShiftId","setTargetShiftId","findingTarget","setFindingTarget","msg","setMsg","cancelled","load","mine","people","_mine$","Array","isArray","_id","e","resolveTarget","list","encodeURIComponent","found","length","handleSwapSubmit","preventDefault","payload","myShiftOptions","map","s","_s$user","id","label","Date","date","toLocaleDateString","user","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_s$user2","onSubmit","value","onChange","target","o","filter","u","type","_c","$RefreshReg$"],"sources":["C:/Users/adith/OneDrive/Desktop/IFN636_Assignment2/Frontend/src/components/Dashboard.jsx"],"sourcesContent":["// src/components/Dashboard.jsx\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\nasync function api(path, { method = \"GET\", body, token } = {}) {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n    },\r\n    ...(body ? { body: JSON.stringify(body) } : {}),\r\n  });\r\n  const data = await res.json().catch(() => ({}));\r\n  if (!res.ok) throw new Error(data.message || res.statusText);\r\n  return data;\r\n}\r\n\r\nexport default function Dashboard() {\r\n  // ---- auth token (adjust if you store it differently) ----\r\n  const [token] = useState(() => localStorage.getItem(\"token\") || \"\");\r\n\r\n  // ---- data for the page ----\r\n  const [myShifts, setMyShifts] = useState([]); // shifts that belong to the logged-in user\r\n  const [users, setUsers] = useState([]);       // all users you can swap with\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadMsg, setLoadMsg] = useState(\"\");\r\n\r\n  // ---- request swap state ----\r\n  const [yourShiftId, setYourShiftId] = useState(\"\");\r\n  const [targetUserId, setTargetUserId] = useState(\"\");\r\n  const [targetDate, setTargetDate] = useState(\"\");   // yyyy-mm-dd\r\n  const [targetShiftId, setTargetShiftId] = useState(\"\");\r\n  const [findingTarget, setFindingTarget] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  // ---------- load initial data ----------\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    async function load() {\r\n      try {\r\n        setLoading(true);\r\n        setLoadMsg(\"\");\r\n        // get my shifts\r\n        const mine = await api(`/shifts?mine=1`, { token });\r\n        // get users (if you have /users protected by Manager only, expose a list endpoint for everyone or return teammates)\r\n        let people = [];\r\n        try {\r\n          people = await api(`/users`, { token });\r\n        } catch {\r\n          // fallback to a team endpoint if you have one\r\n          // people = await api(`/teams/members`, { token });\r\n        }\r\n\r\n        if (!cancelled) {\r\n          setMyShifts(Array.isArray(mine) ? mine : []);\r\n          setUsers(Array.isArray(people) ? people : []);\r\n          if (mine?.[0]?._id) setYourShiftId(mine[0]._id);\r\n        }\r\n      } catch (e) {\r\n        if (!cancelled) setLoadMsg(e.message);\r\n      } finally {\r\n        if (!cancelled) setLoading(false);\r\n      }\r\n    }\r\n    load();\r\n    return () => { cancelled = true; };\r\n  }, [token]);\r\n\r\n  // ---------- resolve targetShiftId whenever user+date change ----------\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    async function resolveTarget() {\r\n      setMsg(\"\");\r\n      setTargetShiftId(\"\");\r\n      if (!targetUserId || !targetDate) return;\r\n      try {\r\n        setFindingTarget(true);\r\n        // Backend must support filtering by userId+date (see section B below)\r\n        const list = await api(\r\n          `/shifts?userId=${encodeURIComponent(targetUserId)}&date=${encodeURIComponent(targetDate)}`,\r\n          { token }\r\n        );\r\n        if (!cancelled) {\r\n          const found = Array.isArray(list) && list.length ? list[0] : null;\r\n          setTargetShiftId(found ? found._id : \"\");\r\n          if (!found) setMsg(\"Selected user has no shift on that date.\");\r\n        }\r\n      } catch (e) {\r\n        if (!cancelled) setMsg(e.message);\r\n      } finally {\r\n        if (!cancelled) setFindingTarget(false);\r\n      }\r\n    }\r\n    resolveTarget();\r\n    return () => { cancelled = true; };\r\n  }, [targetUserId, targetDate, token]);\r\n\r\n  // ---------- submit swap ----------\r\n  async function handleSwapSubmit(e) {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n\r\n    if (!yourShiftId || !targetUserId || !targetDate) {\r\n      setMsg(\"Please select: My shift, User to swap with, and Target date.\");\r\n      return;\r\n    }\r\n    if (!targetShiftId) {\r\n      setMsg(\"Selected user has no shift on the chosen date.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        yourShiftId,\r\n        targetUserId,\r\n        targetShiftId,   // ✅ send the ID (not just the date)\r\n        targetDate       // optional; backend can double-check if you implement it\r\n      };\r\n      const res = await api(`/shifts/swap`, { method: \"POST\", body: payload, token });\r\n      setMsg(res.message || \"Swap request created.\");\r\n      // optionally refresh lists:\r\n      // const mine = await api(`/shifts?mine=1`, { token }); setMyShifts(mine);\r\n    } catch (e) {\r\n      setMsg(e.message || \"Failed to create swap request.\");\r\n    }\r\n  }\r\n\r\n  const myShiftOptions = useMemo(\r\n    () =>\r\n      myShifts.map(s => ({\r\n        id: s._id,\r\n        label: `${new Date(s.date).toLocaleDateString()} — ${s.user?.name || \"Me\"}`\r\n      })),\r\n    [myShifts]\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Dashboard</h1>\r\n\r\n      {/* My Shifts */}\r\n      <section className=\"mb-8\">\r\n        <h2 className=\"text-2xl font-semibold mb-3\">My Shifts</h2>\r\n        {loading ? (\r\n          <div>Loading…</div>\r\n        ) : loadMsg ? (\r\n          <div className=\"text-red-600\">{loadMsg}</div>\r\n        ) : (\r\n          <ul className=\"space-y-2\">\r\n            {myShifts.map(s => (\r\n              <li key={s._id} className=\"border rounded p-2\">\r\n                {new Date(s.date).toLocaleDateString()} — {s.user?.name || \"Me\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* Request Swap */}\r\n      <section className=\"mb-8 border rounded p-4\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Request Swap</h2>\r\n        <form onSubmit={handleSwapSubmit} className=\"space-y-4\">\r\n\r\n          <div className=\"grid gap-2\">\r\n            <label className=\"font-medium\">My shift</label>\r\n            <select\r\n              className=\"border rounded p-2\"\r\n              value={yourShiftId}\r\n              onChange={(e) => setYourShiftId(e.target.value)}\r\n            >\r\n              {myShiftOptions.map(o => (\r\n                <option key={o.id} value={o.id}>{o.label}</option>\r\n              ))}\r\n            </select>\r\n            <small className=\"text-gray-500\">Choose the shift you want to swap away.</small>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <label className=\"font-medium\">User to swap with</label>\r\n            <select\r\n              className=\"border rounded p-2\"\r\n              value={targetUserId}\r\n              onChange={(e) => setTargetUserId(e.target.value)}\r\n            >\r\n              <option value=\"\">Select a user…</option>\r\n              {users.filter(u => !!u?._id).map(u => (\r\n                <option key={u._id} value={u._id}>{u.name}</option>\r\n              ))}\r\n            </select>\r\n            <small className=\"text-gray-500\">Pick the person you want to swap with.</small>\r\n          </div>\r\n\r\n          <div className=\"grid gap-2\">\r\n            <label className=\"font-medium\">Target date</label>\r\n            <input\r\n              className=\"border rounded p-2\"\r\n              type=\"date\"\r\n              value={targetDate}\r\n              onChange={(e) => setTargetDate(e.target.value)}\r\n            />\r\n            <small className=\"text-gray-500\">We’ll look up that user’s shift on the selected date.</small>\r\n            {findingTarget && <div className=\"text-sm text-blue-600\">Checking target shift…</div>}\r\n            {targetShiftId && (\r\n              <div className=\"text-sm text-green-700\">\r\n                Target shift found (id: {targetShiftId})\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-700 text-white px-4 py-2 rounded hover:bg-blue-800\"\r\n          >\r\n            Request Swap\r\n          </button>\r\n\r\n          {msg && <div className=\"text-sm mt-2 text-red-600\">{msg}</div>}\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}