{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\OneDrive\\\\Desktop\\\\IFN636_Assignment2\\\\Frontend\\\\src\\\\components\\\\EmployeeDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\n\n/* ===== API paths (match your backend) ===== */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = {\n  shifts: {\n    list: \"/api/shifts\",\n    // GET (employees get own shifts)\n    swap: \"/api/shifts/swap\" // POST (employee proposes swap)\n  },\n  leaves: {\n    list: \"/api/leaves\",\n    // GET\n    create: \"/api/leaves\" // POST\n  },\n  users: {\n    list: \"/api/users\"\n  } // GET (used for the user dropdown)\n};\n\n/* Safe body reader (JSON or text) */\nconst readBody = async res => {\n  const ct = res.headers.get(\"content-type\") || \"\";\n  if (ct.includes(\"application/json\")) {\n    try {\n      return await res.json();\n    } catch {\n      return null;\n    }\n  }\n  try {\n    return await res.text();\n  } catch {\n    return null;\n  }\n};\n\n/* Flexible date helpers */\nconst dateFrom = obj => obj && (obj.startDate || obj.date || obj.from || obj.start || obj.shiftDate) || null;\nconst dateTo = obj => obj && (obj.endDate || obj.date || obj.to || obj.end || obj.shiftDate) || null;\nconst fmt = d => d ? new Date(d).toLocaleDateString() : \"\";\n\n/* ---------- Component ---------- */\nfunction EmployeeDashboard({\n  user\n}) {\n  _s();\n  const [myShifts, setMyShifts] = useState([]);\n  const [myLeaves, setMyLeaves] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n\n  // Leave form\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n\n  // Swap form (dropdown-based)\n  const [swapForm, setSwapForm] = useState({\n    myShiftId: \"\",\n    targetUserId: \"\",\n    targetDate: \"\"\n  });\n\n  // API base (use .env.local -> REACT_APP_API_BASE_URL=http://localhost:5000, or CRA proxy)\n  const BASE = process.env.REACT_APP_API_BASE_URL || \"\";\n\n  // My identity\n  const {\n    meId,\n    meName\n  } = useMemo(() => {\n    let id = null,\n      name = null;\n    if (user && (user._id || user.id)) {\n      id = user._id || user.id;\n      name = user.name || user.fullName || user.username || user.email || \"Me\";\n    } else {\n      try {\n        const stored = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n        id = stored._id || stored.id || null;\n        name = stored.name || stored.fullName || stored.username || stored.email || \"Me\";\n      } catch {}\n    }\n    return {\n      meId: id,\n      meName: name || \"Me\"\n    };\n  }, [user]);\n\n  /* Load shifts + leaves + users */\n  const loadEmployeeData = async () => {\n    try {\n      const t = localStorage.getItem(\"token\");\n      const headers = {\n        Authorization: `Bearer ${t}`\n      };\n      const [shiftsRes, leavesRes, usersRes] = await Promise.all([fetch(`${BASE}${API.shifts.list}`, {\n        headers\n      }), fetch(`${BASE}${API.leaves.list}`, {\n        headers\n      }), fetch(`${BASE}${API.users.list}`, {\n        headers\n      })]);\n      const [shiftsRaw, leavesRaw, usersRaw] = await Promise.all([readBody(shiftsRes), readBody(leavesRes), readBody(usersRes)]);\n\n      // Shifts: employees get only their own\n      setMyShifts(Array.isArray(shiftsRaw) ? shiftsRaw : []);\n\n      // Leaves: accept [] or {leaves:[...]} or {data:[...]}\n      const leavesArr = Array.isArray(leavesRaw) ? leavesRaw : Array.isArray(leavesRaw === null || leavesRaw === void 0 ? void 0 : leavesRaw.leaves) ? leavesRaw.leaves : Array.isArray(leavesRaw === null || leavesRaw === void 0 ? void 0 : leavesRaw.data) ? leavesRaw.data : [];\n      const mine = meId ? leavesArr.filter(l => {\n        var _l$user;\n        return (l === null || l === void 0 ? void 0 : (_l$user = l.user) === null || _l$user === void 0 ? void 0 : _l$user._id) === meId || (l === null || l === void 0 ? void 0 : l.userId) === meId || typeof (l === null || l === void 0 ? void 0 : l.user) === \"string\" && l.user === meId;\n      }) : leavesArr;\n      setMyLeaves(mine);\n\n      // Users list for dropdown (accept [] or {users:[...]})\n      const usersArr = Array.isArray(usersRaw) ? usersRaw : Array.isArray(usersRaw === null || usersRaw === void 0 ? void 0 : usersRaw.users) ? usersRaw.users : [];\n      setAllUsers(usersArr);\n    } catch (e) {\n      console.error(e);\n      setMyShifts([]);\n      setMyLeaves([]);\n      setAllUsers([]);\n    }\n  };\n  useEffect(() => {\n    loadEmployeeData();\n  }, [BASE]);\n\n  /* Submit leave -> re-fetch so it shows immediately */\n  const submitLeave = async e => {\n    e.preventDefault();\n    try {\n      const t = localStorage.getItem(\"token\");\n      const res = await fetch(`${BASE}${API.leaves.create}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${t}`,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          startDate,\n          endDate,\n          reason\n        })\n      });\n      const body = await readBody(res);\n      if (!res.ok) {\n        console.error(\"Leave submit failed:\", res.status, body);\n        alert(body && body.message || (typeof body === \"string\" ? body : `Failed to submit leave (HTTP ${res.status})`));\n        return;\n      }\n      setStartDate(\"\");\n      setEndDate(\"\");\n      setReason(\"\");\n      await loadEmployeeData();\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to submit leave\");\n    }\n  };\n\n  /* Submit swap request (dropdown user + date) */\n  const submitSwap = async e => {\n    e.preventDefault();\n    if (!swapForm.myShiftId) {\n      alert(\"Please select your shift to swap.\");\n      return;\n    }\n    if (!swapForm.targetUserId || !swapForm.targetDate) {\n      alert(\"Please select a user to swap with and a target date.\");\n      return;\n    }\n    const payload = {\n      initiatorShiftId: swapForm.myShiftId,\n      targetUserId: swapForm.targetUserId,\n      date: swapForm.targetDate\n    };\n    try {\n      const t = localStorage.getItem(\"token\");\n      const res = await fetch(`${BASE}${API.shifts.swap}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${t}`,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const body = await readBody(res);\n      if (!res.ok) {\n        console.error(\"Swap request failed:\", res.status, body);\n        alert(body && body.message || (typeof body === \"string\" ? body : `Failed to request swap (HTTP ${res.status})`));\n        return;\n      }\n      setSwapForm({\n        myShiftId: \"\",\n        targetUserId: \"\",\n        targetDate: \"\"\n      });\n      alert(\"Swap request sent!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to request swap\");\n    }\n  };\n\n  // Label for \"My shift\" options — show your name, not the shift id\n  const shiftLabel = s => {\n    const d = s.date || s.shiftDate || s.startDate || s.assignedDate || s.scheduledFor || s.day || s.dayDate;\n    const ds = d ? new Date(d).toLocaleDateString() : \"(no date)\";\n    return `${ds} — ${meName}`;\n  };\n\n  // Build user dropdown options (exclude self)\n  const usersForDropdown = useMemo(() => {\n    const arr = Array.isArray(allUsers) ? allUsers : Array.isArray(allUsers === null || allUsers === void 0 ? void 0 : allUsers.users) ? allUsers.users : [];\n    return arr.filter(u => ((u === null || u === void 0 ? void 0 : u._id) || (u === null || u === void 0 ? void 0 : u.id)) && (u._id || u.id) !== meId);\n  }, [allUsers, meId]);\n  const userLabel = u => (u === null || u === void 0 ? void 0 : u.name) || (u === null || u === void 0 ? void 0 : u.fullName) || (u === null || u === void 0 ? void 0 : u.username) || (u === null || u === void 0 ? void 0 : u.email) || \"User\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card shadow-sm p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3 text-primary fw-bold\",\n        children: \"My Shifts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled d-grid gap-2\",\n        children: [myShifts.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"d-flex flex-wrap align-items-center justify-content-between gap-2 border rounded-3 p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: shiftLabel(s)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, s._id || `shift-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)), myShifts.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-muted\",\n          children: \"No shifts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card shadow-sm p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3 text-primary fw-bold\",\n        children: \"Request Swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"row g-3\",\n        onSubmit: submitSwap,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"My shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: swapForm.myShiftId,\n            onChange: e => setSwapForm({\n              ...swapForm,\n              myShiftId: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select your shift\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), myShifts.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s._id,\n              children: shiftLabel(s)\n            }, s._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: \"Choose the shift you want to swap away.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"User to swap with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: swapForm.targetUserId,\n            onChange: e => setSwapForm({\n              ...swapForm,\n              targetUserId: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a user\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), usersForDropdown.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u._id || u.id,\n              children: userLabel(u)\n            }, u._id || u.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: \"Pick the person you want to swap with.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Target date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            value: swapForm.targetDate,\n            onChange: e => setSwapForm({\n              ...swapForm,\n              targetDate: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Request Swap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), usersForDropdown.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 small text-secondary\",\n        children: [\"Can\\u2019t see users? Ensure this account can access \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"/api/users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 61\n        }, this), \", or ask an admin to enable it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card shadow-sm p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3 text-primary fw-bold\",\n        children: \"Request Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"row g-2\",\n        onSubmit: submitLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"start\",\n            className: \"form-label\",\n            children: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"start\",\n            type: \"date\",\n            className: \"form-control\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"end\",\n            className: \"form-label\",\n            children: \"End date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"end\",\n            type: \"date\",\n            className: \"form-control\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reason\",\n            className: \"form-label\",\n            children: \"Reason (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"reason\",\n            rows: 3,\n            className: \"form-control\",\n            placeholder: \"e.g., personal leave\",\n            value: reason,\n            onChange: e => setReason(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Submit Request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card shadow-sm p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3 text-primary fw-bold\",\n        children: \"My Leave Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled d-grid gap-2\",\n        children: [myLeaves.map(l => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"d-flex flex-wrap align-items-center justify-content-between gap-2 border rounded-3 p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [fmt(dateFrom(l)), \" \\u2192 \", fmt(dateTo(l)), \" \\u2014 \", l.status || \"pending\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, l._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)), myLeaves.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-muted\",\n          children: \"No leave requests yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDashboard, \"ysvCZxSTPcp9K4a9W9MpR7xxBy4=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","jsxDEV","_jsxDEV","API","shifts","list","swap","leaves","create","users","readBody","res","ct","headers","get","includes","json","text","dateFrom","obj","startDate","date","from","start","shiftDate","dateTo","endDate","to","end","fmt","d","Date","toLocaleDateString","EmployeeDashboard","user","_s","myShifts","setMyShifts","myLeaves","setMyLeaves","allUsers","setAllUsers","setStartDate","setEndDate","reason","setReason","swapForm","setSwapForm","myShiftId","targetUserId","targetDate","BASE","process","env","REACT_APP_API_BASE_URL","meId","meName","id","name","_id","fullName","username","email","stored","JSON","parse","localStorage","getItem","loadEmployeeData","t","Authorization","shiftsRes","leavesRes","usersRes","Promise","all","fetch","shiftsRaw","leavesRaw","usersRaw","Array","isArray","leavesArr","data","mine","filter","l","_l$user","userId","usersArr","e","console","error","submitLeave","preventDefault","method","Accept","body","stringify","ok","status","alert","message","err","submitSwap","payload","initiatorShiftId","shiftLabel","s","assignedDate","scheduledFor","day","dayDate","ds","usersForDropdown","arr","u","userLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","length","onSubmit","value","onChange","target","required","type","htmlFor","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/adith/OneDrive/Desktop/IFN636_Assignment2/Frontend/src/components/EmployeeDashboard.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\n/* ===== API paths (match your backend) ===== */\r\nconst API = {\r\n  shifts: {\r\n    list: \"/api/shifts\",      // GET (employees get own shifts)\r\n    swap: \"/api/shifts/swap\", // POST (employee proposes swap)\r\n  },\r\n  leaves: {\r\n    list: \"/api/leaves\",      // GET\r\n    create: \"/api/leaves\",    // POST\r\n  },\r\n  users: { list: \"/api/users\" }, // GET (used for the user dropdown)\r\n};\r\n\r\n/* Safe body reader (JSON or text) */\r\nconst readBody = async (res) => {\r\n  const ct = res.headers.get(\"content-type\") || \"\";\r\n  if (ct.includes(\"application/json\")) {\r\n    try { return await res.json(); } catch { return null; }\r\n  }\r\n  try { return await res.text(); } catch { return null; }\r\n};\r\n\r\n/* Flexible date helpers */\r\nconst dateFrom = (obj) =>\r\n  (obj && (obj.startDate || obj.date || obj.from || obj.start || obj.shiftDate)) || null;\r\nconst dateTo = (obj) =>\r\n  (obj && (obj.endDate || obj.date || obj.to || obj.end || obj.shiftDate)) || null;\r\n\r\nconst fmt = (d) => (d ? new Date(d).toLocaleDateString() : \"\");\r\n\r\n/* ---------- Component ---------- */\r\nfunction EmployeeDashboard({ user }) {\r\n  const [myShifts, setMyShifts] = useState([]);\r\n  const [myLeaves, setMyLeaves] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  // Leave form\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [reason, setReason] = useState(\"\");\r\n\r\n  // Swap form (dropdown-based)\r\n  const [swapForm, setSwapForm] = useState({\r\n    myShiftId: \"\",\r\n    targetUserId: \"\",\r\n    targetDate: \"\",\r\n  });\r\n\r\n  // API base (use .env.local -> REACT_APP_API_BASE_URL=http://localhost:5000, or CRA proxy)\r\n  const BASE = process.env.REACT_APP_API_BASE_URL || \"\";\r\n\r\n  // My identity\r\n  const { meId, meName } = useMemo(() => {\r\n    let id = null, name = null;\r\n    if (user && (user._id || user.id)) {\r\n      id = user._id || user.id;\r\n      name = user.name || user.fullName || user.username || user.email || \"Me\";\r\n    } else {\r\n      try {\r\n        const stored = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n        id = stored._id || stored.id || null;\r\n        name = stored.name || stored.fullName || stored.username || stored.email || \"Me\";\r\n      } catch {}\r\n    }\r\n    return { meId: id, meName: name || \"Me\" };\r\n  }, [user]);\r\n\r\n  /* Load shifts + leaves + users */\r\n  const loadEmployeeData = async () => {\r\n    try {\r\n      const t = localStorage.getItem(\"token\");\r\n      const headers = { Authorization: `Bearer ${t}` };\r\n\r\n      const [shiftsRes, leavesRes, usersRes] = await Promise.all([\r\n        fetch(`${BASE}${API.shifts.list}`, { headers }),\r\n        fetch(`${BASE}${API.leaves.list}`, { headers }),\r\n        fetch(`${BASE}${API.users.list}`,  { headers }),\r\n      ]);\r\n\r\n      const [shiftsRaw, leavesRaw, usersRaw] = await Promise.all([\r\n        readBody(shiftsRes),\r\n        readBody(leavesRes),\r\n        readBody(usersRes),\r\n      ]);\r\n\r\n      // Shifts: employees get only their own\r\n      setMyShifts(Array.isArray(shiftsRaw) ? shiftsRaw : []);\r\n\r\n      // Leaves: accept [] or {leaves:[...]} or {data:[...]}\r\n      const leavesArr = Array.isArray(leavesRaw)\r\n        ? leavesRaw\r\n        : Array.isArray(leavesRaw?.leaves)\r\n        ? leavesRaw.leaves\r\n        : Array.isArray(leavesRaw?.data)\r\n        ? leavesRaw.data\r\n        : [];\r\n\r\n      const mine = meId\r\n        ? leavesArr.filter(\r\n            (l) =>\r\n              l?.user?._id === meId ||\r\n              l?.userId === meId ||\r\n              (typeof l?.user === \"string\" && l.user === meId)\r\n          )\r\n        : leavesArr;\r\n\r\n      setMyLeaves(mine);\r\n\r\n      // Users list for dropdown (accept [] or {users:[...]})\r\n      const usersArr = Array.isArray(usersRaw)\r\n        ? usersRaw\r\n        : Array.isArray(usersRaw?.users)\r\n        ? usersRaw.users\r\n        : [];\r\n      setAllUsers(usersArr);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setMyShifts([]);\r\n      setMyLeaves([]);\r\n      setAllUsers([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployeeData();\r\n  }, [BASE]);\r\n\r\n  /* Submit leave -> re-fetch so it shows immediately */\r\n  const submitLeave = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const t = localStorage.getItem(\"token\");\r\n      const res = await fetch(`${BASE}${API.leaves.create}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${t}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ startDate, endDate, reason }),\r\n      });\r\n\r\n      const body = await readBody(res);\r\n      if (!res.ok) {\r\n        console.error(\"Leave submit failed:\", res.status, body);\r\n        alert(\r\n          (body && body.message) ||\r\n            (typeof body === \"string\" ? body : `Failed to submit leave (HTTP ${res.status})`)\r\n        );\r\n        return;\r\n      }\r\n\r\n      setStartDate(\"\");\r\n      setEndDate(\"\");\r\n      setReason(\"\");\r\n      await loadEmployeeData();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to submit leave\");\r\n    }\r\n  };\r\n\r\n  /* Submit swap request (dropdown user + date) */\r\n  const submitSwap = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!swapForm.myShiftId) {\r\n      alert(\"Please select your shift to swap.\");\r\n      return;\r\n    }\r\n    if (!swapForm.targetUserId || !swapForm.targetDate) {\r\n      alert(\"Please select a user to swap with and a target date.\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      initiatorShiftId: swapForm.myShiftId,\r\n      targetUserId: swapForm.targetUserId,\r\n      date: swapForm.targetDate,\r\n    };\r\n\r\n    try {\r\n      const t = localStorage.getItem(\"token\");\r\n      const res = await fetch(`${BASE}${API.shifts.swap}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${t}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const body = await readBody(res);\r\n      if (!res.ok) {\r\n        console.error(\"Swap request failed:\", res.status, body);\r\n        alert(\r\n          (body && body.message) ||\r\n            (typeof body === \"string\" ? body : `Failed to request swap (HTTP ${res.status})`)\r\n        );\r\n        return;\r\n      }\r\n\r\n      setSwapForm({ myShiftId: \"\", targetUserId: \"\", targetDate: \"\" });\r\n      alert(\"Swap request sent!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to request swap\");\r\n    }\r\n  };\r\n\r\n  // Label for \"My shift\" options — show your name, not the shift id\r\n  const shiftLabel = (s) => {\r\n    const d =\r\n      s.date || s.shiftDate || s.startDate || s.assignedDate || s.scheduledFor || s.day || s.dayDate;\r\n    const ds = d ? new Date(d).toLocaleDateString() : \"(no date)\";\r\n    return `${ds} — ${meName}`;\r\n  };\r\n\r\n  // Build user dropdown options (exclude self)\r\n  const usersForDropdown = useMemo(() => {\r\n    const arr = Array.isArray(allUsers) ? allUsers\r\n              : Array.isArray(allUsers?.users) ? allUsers.users : [];\r\n    return arr.filter((u) => (u?._id || u?.id) && (u._id || u.id) !== meId);\r\n  }, [allUsers, meId]);\r\n\r\n  const userLabel = (u) =>\r\n    u?.name || u?.fullName || u?.username || u?.email || \"User\";\r\n\r\n  return (\r\n    <div className=\"container py-3\">\r\n      {/* My Shifts */}\r\n      <section className=\"card shadow-sm p-3 mb-3\">\r\n        <h3 className=\"mb-3 text-primary fw-bold\">My Shifts</h3>\r\n        <ul className=\"list-unstyled d-grid gap-2\">\r\n          {myShifts.map((s, i) => (\r\n            <li\r\n              key={s._id || `shift-${i}`}\r\n              className=\"d-flex flex-wrap align-items-center justify-content-between gap-2 border rounded-3 p-2\"\r\n            >\r\n              <span>{shiftLabel(s)}</span>\r\n            </li>\r\n          ))}\r\n          {myShifts.length === 0 && <li className=\"text-muted\">No shifts found.</li>}\r\n        </ul>\r\n      </section>\r\n\r\n      {/* Request Swap (dropdown-based) */}\r\n      <section className=\"card shadow-sm p-3 mb-3\">\r\n        <h3 className=\"mb-3 text-primary fw-bold\">Request Swap</h3>\r\n        <form className=\"row g-3\" onSubmit={submitSwap}>\r\n          <div className=\"col-12 col-md-6\">\r\n            <label className=\"form-label\">My shift</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={swapForm.myShiftId}\r\n              onChange={(e) => setSwapForm({ ...swapForm, myShiftId: e.target.value })}\r\n              required\r\n            >\r\n              <option value=\"\">Select your shift…</option>\r\n              {myShifts.map((s) => (\r\n                <option key={s._id} value={s._id}>\r\n                  {shiftLabel(s)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"form-text\">Choose the shift you want to swap away.</div>\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-6\">\r\n            <label className=\"form-label\">User to swap with</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={swapForm.targetUserId}\r\n              onChange={(e) => setSwapForm({ ...swapForm, targetUserId: e.target.value })}\r\n              required\r\n            >\r\n              <option value=\"\">Select a user…</option>\r\n              {usersForDropdown.map((u) => (\r\n                <option key={u._id || u.id} value={u._id || u.id}>\r\n                  {userLabel(u)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"form-text\">Pick the person you want to swap with.</div>\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-3\">\r\n            <label className=\"form-label\">Target date</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              value={swapForm.targetDate}\r\n              onChange={(e) => setSwapForm({ ...swapForm, targetDate: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-12 d-flex justify-content-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Request Swap</button>\r\n          </div>\r\n        </form>\r\n        {usersForDropdown.length === 0 && (\r\n          <div className=\"mt-2 small text-secondary\">\r\n            Can’t see users? Ensure this account can access <code>/api/users</code>, or ask an admin to enable it.\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      {/* Request Leave */}\r\n      <section className=\"card shadow-sm p-3 mb-3\">\r\n        <h3 className=\"mb-3 text-primary fw-bold\">Request Leave</h3>\r\n        <form className=\"row g-2\" onSubmit={submitLeave}>\r\n          <div className=\"col-12 col-sm-6\">\r\n            <label htmlFor=\"start\" className=\"form-label\">Start date</label>\r\n            <input\r\n              id=\"start\"\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-sm-6\">\r\n            <label htmlFor=\"end\" className=\"form-label\">End date</label>\r\n            <input\r\n              id=\"end\"\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <label htmlFor=\"reason\" className=\"form-label\">Reason (optional)</label>\r\n            <textarea\r\n              id=\"reason\"\r\n              rows={3}\r\n              className=\"form-control\"\r\n              placeholder=\"e.g., personal leave\"\r\n              value={reason}\r\n              onChange={(e) => setReason(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 d-flex justify-content-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit Request</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n\r\n      {/* My Leave Requests */}\r\n      <section className=\"card shadow-sm p-3\">\r\n        <h3 className=\"mb-3 text-primary fw-bold\">My Leave Requests</h3>\r\n        <ul className=\"list-unstyled d-grid gap-2\">\r\n          {myLeaves.map((l) => (\r\n            <li\r\n              key={l._id}\r\n              className=\"d-flex flex-wrap align-items-center justify-content-between gap-2 border rounded-3 p-2\"\r\n            >\r\n              <span>\r\n                {fmt(dateFrom(l))} &rarr; {fmt(dateTo(l))} — {l.status || \"pending\"}\r\n              </span>\r\n            </li>\r\n          ))}\r\n          {myLeaves.length === 0 && (\r\n            <li className=\"text-muted\">No leave requests yet.</li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}