{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\OneDrive\\\\Desktop\\\\IFN636_Assignment2\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Register from \"./components/Register\";\n\n// Root component configuring routes. Implements simple authentication check.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null); // user object with role if logged in\n\n  useEffect(() => {\n    // On mount, check local storage for saved login\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) setUser(JSON.parse(savedUser));\n  }, []);\n  const handleLogin = (userData, token) => {\n    // Save user and token on login\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: user ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: user ? \"/dashboard\" : \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Dashboard","Register","jsxDEV","_jsxDEV","App","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","handleLogin","userData","token","setItem","stringify","handleLogout","removeItem","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/adith/OneDrive/Desktop/IFN636_Assignment2/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\nimport Register from \"./components/Register\";\r\n\r\n// Root component configuring routes. Implements simple authentication check.\r\nfunction App() {\r\n  const [user, setUser] = useState(null);  // user object with role if logged in\r\n\r\n  useEffect(() => {\r\n    // On mount, check local storage for saved login\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) setUser(JSON.parse(savedUser));\r\n  }, []);\r\n\r\n  const handleLogin = (userData, token) => {\r\n    // Save user and token on login\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setUser(userData);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Public login route */}\r\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n        {/* Protected dashboard route */}\r\n        <Route path=\"/dashboard\" element={\r\n          user ? <Dashboard user={user} onLogout={handleLogout} /> : <Navigate to=\"/login\" replace />\r\n        } />\r\n        {/* Default route */}\r\n        <Route path=\"*\" element={<Navigate to={user ? \"/dashboard\" : \"/login\"} replace />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}